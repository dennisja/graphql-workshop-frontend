// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component renders properly 1`] = `
<ApolloProvider
  client={
    ApolloClient {
      "__operations_cache__": Map {
        "getLinks" => Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "getLinks",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "links",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "url",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "title",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 73,
              "start": 0,
            },
          },
          "variables": undefined,
        },
      },
      "cache": InMemoryCache {
        "addTypename": true,
        "config": Object {
          "addTypename": true,
          "dataIdFromObject": [Function],
          "fragmentMatcher": HeuristicFragmentMatcher {},
          "storeFactory": [Function],
        },
        "data": ObjectCache {
          "data": Object {},
        },
        "optimistic": Array [],
        "silenceBroadcast": false,
        "watches": Array [],
      },
      "defaultOptions": Object {},
      "disableNetworkFetches": false,
      "link": ApolloLink {
        "request": [Function],
      },
      "mutate": [Function],
      "query": [Function],
      "queryDeduplication": true,
      "queryManager": QueryManager {
        "dataStore": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "storeFactory": [Function],
            },
            "data": ObjectCache {
              "data": Object {},
            },
            "optimistic": Array [],
            "silenceBroadcast": false,
            "watches": Array [],
          },
        },
        "deduplicator": ApolloLink {
          "request": [Function],
        },
        "fetchQueryPromises": Map {
          "2" => Object {
            "promise": undefined,
            "reject": [Function],
            "resolve": [Function],
          },
        },
        "idCounter": 3,
        "link": ApolloLink {
          "request": [Function],
        },
        "mutationStore": MutationStore {
          "store": Object {},
        },
        "onBroadcast": [Function],
        "queries": Map {},
        "queryDeduplication": true,
        "queryIdsByName": Object {
          "getLinks": Array [],
        },
        "queryStore": QueryStore {
          "store": Object {},
        },
        "scheduler": QueryScheduler {
          "inFlightQueries": Object {},
          "intervalQueries": Object {},
          "pollingTimers": Object {},
          "queryManager": [Circular],
          "registeredQueries": Object {},
          "ssrMode": false,
        },
      },
      "reFetchObservableQueries": [Function],
      "resetStore": [Function],
      "resetStoreCallbacks": Array [],
      "ssrMode": false,
      "store": DataStore {
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [],
        },
      },
      "version": "2.2.8",
      "watchQuery": [Function],
    }
  }
>
  <div
    className="App"
  >
    <header
      className="App-header"
    >
      <img
        alt="logo"
        className="App-logo"
        src="logo.svg"
      />
      <h1
        className="App-title"
      >
        Welcome to React
      </h1>
    </header>
    <div>
      <Apollo(Component) />
    </div>
  </div>
</ApolloProvider>
`;
